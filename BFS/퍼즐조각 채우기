
문제 링크
https://school.programmers.co.kr/learn/courses/30/lessons/84021

블로그 링크
https://khs20010327.tistory.com/166

구현 코드

#include <string>
#include <vector>
#include <queue>
#include <iostream>
using namespace std;
int n;
int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
vector<vector<int>> g;
vector<vector<int>> t;
int solution(vector<vector<int>> game_board, vector<vector<int>> table) {
    int answer = 0;
    int n = game_board.size();

    for(int y=0 ; y<n ; y++){
        for(int x=0 ; x<n ; x++){
            if(game_board[y][x]==0){
                game_board[y][x]=2;
                queue<pair<int,int>> q;
                vector<int> qq;
                q.push({y,x});
                while(!q.empty()){
                    int y1 = q.front().first;
                    int x1 = q.front().second;
                    q.pop();
                    int zz=0;
                    for(int i=0 ; i<4 ; i++){
                        int ny = y1+dy[i];
                        int nx = x1+dx[i];
                        if (nx>-1 && ny>-1 && nx<n && ny<n){
                            if(game_board[ny][nx]!=1 )
                                zz++;
                        }
                    }
                    qq.push_back(zz);
                    for(int i=0 ; i<4 ; i++){
                        int ny = y1+dy[i];
                        int nx = x1+dx[i];
                        if (nx>-1 && ny>-1 && nx<n && ny<n){
                            if(game_board[ny][nx]==0 ){
                                game_board[ny][nx]=2;
                                q.push({ny,nx});
                            }
                        }
                    }

                }
                g.push_back(qq);
            }
        }
    }
    
    for(int y=0 ; y<n ; y++){
        for(int x=0 ; x<n ; x++){
            if(table[y][x]==1){
                table[y][x]=2;
                queue<pair<int,int>> q;
                vector<int> qq;
                q.push({y,x});
                while(!q.empty()){
                    int y1 = q.front().first;
                    int x1 = q.front().second;
                    q.pop();
                    int zz=0;
                    for(int i=0 ; i<4 ; i++){
                        int ny = y1+dy[i];
                        int nx = x1+dx[i];
                        if (nx>-1 && ny>-1 && nx<n && ny<n){
                            if(table[ny][nx]!=0 )
                                zz++;
                        }
                    }
                    qq.push_back(zz);
                    for(int i=0 ; i<4 ; i++){
                        int ny = y1+dy[i];
                        int nx = x1+dx[i];
                        if (nx>-1 && ny>-1 && nx<n && ny<n){
                            if(table[ny][nx]==1 ){
                                table[ny][nx]=2;
                                q.push({ny,nx});
                            }
                        }
                    }

                }
                t.push_back(qq);
            }
        }
    }
    int counts = 0;
    for(int y=0 ; y<n ; y++){
        for(int x=0 ; x<n ; x++){
            if(game_board[y][x]!=1)
                counts++;
        }
    }
    cout<<counts<<"\n";
    
    for(int y=0 ; y<g.size() ; y++){
        for(int x=0 ; x<g[y].size() ; x++){
            cout<<g[y][x]<<" ";
        }
        cout<<"\n";
    }
    for(int y=0 ; y<t.size() ; y++){
        for(int x=0 ; x<t[y].size() ; x++){
            cout<<t[y][x]<<" ";
        }
        cout<<"\n";
    }
    for(int x=0 ; x<g.size() ; x++){
        for(int y=0 ; y<t.size() ; y++){
            if(g[x]==t[y]){
                cout<<"aa"<<g[x].size()<<"\n";
                answer += g[x].size();
                cout<<"answer"<<answer<<"\n";
                g[x]={-1};
                t[y]={-2};
            }   
        }
    }
    
    
    
    return answer;
}
