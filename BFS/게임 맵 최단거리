
문제 링크
https://school.programmers.co.kr/learn/courses/30/lessons/1844

블로그 링크
https://khs20010327.tistory.com/159

구현 코드

#include<vector>
#include<queue>
using namespace std;
int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
int check[101][101];
int solution(vector<vector<int> > maps)
{
    int n = maps.size();
    int m = maps[0].size();
    queue<pair<int,int>> q;
    q.push({0,0});
    check[0][0]=1;
    while(!q.empty()){
        int x = q.front().first;
        int y = q.front().second;
        q.pop();
        for(int i=0 ; i<4 ; i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            if(nx>-1 && ny >-1 && nx<n && ny<m){
                if(check[nx][ny]!=1 && maps[nx][ny]>0){
                    check[nx][ny]=1;
                    maps[nx][ny] = maps[x][y]+1;
                    q.push({nx,ny});
                }
            }
        }
        
    }
    
    
    int answer = -1;
    if(maps[n-1][m-1]>1)
        answer = maps[n-1][m-1];
    return answer;
}
