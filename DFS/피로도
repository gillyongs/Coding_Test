
문제 링크
https://school.programmers.co.kr/learn/courses/30/lessons/1844

블로그 링크
https://khs20010327.tistory.com/158

구현 링크

#include <string>
#include <vector>
#include <iostream>
using namespace std;
void dfs(int i);
int counts=0;
int answer = -1;
int p;
int n;
vector<vector<int>> d;
int visit[10];
int solution(int k, vector<vector<int>> dungeons) {
    d = dungeons;
    p=k;
    n=d.size();
    for(int i=0 ; i<n ; i++){
        counts=1;
        p=k;
        for(int j=0 ; j<9 ; j++){
            visit[j]=0;
        }
        p -= d[i][1];
        visit[i]=1;
        dfs(i);
    }

    return answer;
}

void dfs(int i){
    for(int k=0 ; k<n ; k++){
        if(visit[k]!=1 && d[k][0]<=p){
            counts ++;
            if(counts>answer)
                answer=counts;
            p -= d[k][1];
            visit[k]=1;
            dfs(k);
            p+=d[k][1];
            counts --;
            visit[k]=0;
        }
    }
    
}
