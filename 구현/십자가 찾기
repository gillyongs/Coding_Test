
문제 링크
https://www.acmicpc.net/problem/16924

블로그 링크
https://khs20010327.tistory.com/171

구현 코드

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int nn;
int mm;
int map[101][101];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int N, M;
    cin >> N >> M;
    nn = N;
    mm = M;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            char c;
            cin >> c;
            if (c == '*')
                map[i][j] = 1;
            else
                map[i][j] = 0;
        }
    }
    vector<pair<int, int>> v;

    for (int i = 1; i < N-1; i++)
        for (int j = 1; j < M-1; j++)
            if (map[i][j] == 1)
                if (map[i+1][j] == 1)
                    if (map[i-1][j] == 1)
                        if (map[i][j+1] == 1)
                            if (map[i][j - 1] == 1)
                                v.push_back({ i,j });
    int index = 1;
    vector<pair<pair<int, int>, int>> vv;
    for (int i = 0; i < v.size(); i++) {
        int x = v[i].first;
        int y = v[i].second;
        if (x >= index && map[x - index][y] == 1) {
            if (y >= index && map[x][y - index] == 1) {
                if (x < N - index && map[x + index][y] == 1) {
                    if (y < M - index && map[x][y + index] == 1) {
                        vv.push_back({ {x,y},index });
                        i--;
                        index++;
                        continue;
                    }
                }
            }
        }
        index = 1;
    }
    for (int i = 0; i < vv.size(); i++) {
        int x = vv[i].first.first;
        int y = vv[i].first.second;
        int id = vv[i].second;
        map[x][y] = 0;
            map[x+id][y] = 0;
            map[x][y+id] = 0;
            map[x-id][y] = 0;
            map[x][y-id] = 0;
    }
    int k = 0;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            if (map[i][j] == 1) {
                k = 1;
            }
        }
    }
    if (k == 1) {
        cout << -1;
    }
    if (k == 0) {
        cout << vv.size()<<"\n";
        for (int i = 0; i < vv.size(); i++) {
            cout << vv[i].first.first + 1 << " " << vv[i].first.second + 1 << " " << vv[i].second << "\n";
        }
    }
    return 0;
}
